name: pypi

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main  
      - '*ci*'

jobs:
  build_wheels:
    name: Build and Test wheels on ${{ matrix.platform }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: manylinux
            arch: x86_64

          - os: macos-latest
            platform: macOS
            arch: x86_64

          - os: macos-latest
            platform: macOS
            arch: arm64

          - os: windows-latest
            platform: Windows
            arch: x86_64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install cibuildwheel
        run: pipx install cibuildwheel==2.23.1

      - name: Build wheels
        env:
          CIBW_BUILD: "cp311-*"
        run: cibuildwheel --output-dir wheelhouse .

      - name: Install built wheel and dependencies
        run: |
          pip install --find-links=wheelhouse test_my_binding
          pip install pytest
          python -c "import test_my_binding; print(test_my_binding.__file__)"
          pip list

      - name: Verify installation
        run: |
          python -c "import test_my_binding; print(test_my_binding.__file__)"
          pip show test_my_binding
          python -c "import pkgutil; import test_my_binding; print([m.name for m in pkgutil.walk_packages(test_my_binding.__path__)])"
          python -c "import test_my_binding; print('test_my_binding imported successfully')"

      - name: Run Tests
        run: python -m pytest tests/ -v

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}-${{ matrix.arch }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish package to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/test_my_binding
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Install Twine
        run: pip install twine

      - name: Publish to PyPI
        run: python -m twine upload dist/*

      - name: Publish missing macOS x86_64 wheel (if needed)
        run: python -m twine upload dist/*.cp311-*macosx_11_0_x86_64*.whl || echo "macOS x86_64 wheel already uploaded."
